-----------------------------------------------
------- 1.1.3 Consultas sobre una tabla -------
-----------------------------------------------

-- 1. Lista el nombre de todos los productos que hay en la tabla producto.
SELECT nombre
FROM PRODUCTO;

-- 2. Lista los nombres y los precios de todos los productos de la tabla producto.
SELECT nombre, precio
FROM PRODUCTO;

-- 3. Lista todas las columnas de la tabla producto.
SELECT *
FROM PRODUCTO;

-- 4. Lista el nombre de los productos, el precio en euros y el precio en dólares estadounidenses (USD).
SELECT nombre, precio, ROUND(precio*1.08,2)
FROM PRODUCTO;

-- 5. Lista el nombre de los productos, el precio en euros y el precio en dólares estadounidenses (USD). Utiliza los siguientes alias para las columnas: nombre de producto, euros, dólares.
SELECT nombre as 'nombre de producto', precio as 'euros', ROUND(precio*1.08,2) as 'dólares'
FROM PRODUCTO;

-- 6. Lista los nombres y los precios de todos los productos de la tabla producto, convirtiendo los nombres a mayúscula.
SELECT UPPER(nombre), precio
FROM PRODUCTO;

-- 7. Lista los nombres y los precios de todos los productos de la tabla producto, convirtiendo los nombres a minúscula.
SELECT LOWER(nombre), precio
FROM PRODUCTO;

-- 8. Lista el nombre de todos los fabricantes en una columna, y en otra columna obtenga en mayúsculas los dos primeros caracteres del nombre del fabricante.
SELECT nombre, LEFT(nombre,2)
FROM fabricante;

-- 9. Lista los nombres y los precios de todos los productos de la tabla producto, redondeando el valor del precio.
SELECT nombre, ROUND(precio)
FROM producto;

-- 10. Lista los nombres y los precios de todos los productos de la tabla producto, truncando el valor del precio para mostrarlo sin ninguna cifra decimal.
SELECT nombre, FLOOR(precio)
FROM producto;

-- 11. Lista el código de los fabricantes que tienen productos en la tabla producto.
SELECT codigo_fabricante
FROM producto;

-- 12. Lista el código de los fabricantes que tienen productos en la tabla producto, eliminando los códigos que aparecen repetidos.
SELECT DISTINCT(codigo_fabricante)
FROM producto;

-- 13. Lista los nombres de los fabricantes ordenados de forma ascendente.
SELECT nombre
FROM fabricante
ORDER BY nombre ASC;

-- 14. Lista los nombres de los fabricantes ordenados de forma descendente.
SELECT nombre
FROM fabricante
ORDER BY nombre DESC;

-- 15. Lista los nombres de los productos ordenados en primer lugar por el nombre de forma ascendente y en segundo lugar por el precio de forma descendente.
SELECT nombre
FROM producto
ORDER BY nombre ASC, precio DESC;

-- 16. Devuelve una lista con las 5 primeras filas de la tabla fabricante.
SELECT *
FROM fabricante
LIMIT 5;

-- 17. Devuelve una lista con 2 filas a partir de la cuarta fila de la tabla fabricante. La cuarta fila también se debe incluir en la respuesta.
SELECT *
FROM fabricante
LIMIT 2 OFFSET 3;

-- 18. Lista el nombre y el precio del producto más barato. (Utilice solamente las cláusulas ORDER BY y LIMIT)
SELECT nombre, precio
FROM producto
ORDER BY precio ASC
LIMIT 1;

-- 19. Lista el nombre y el precio del producto más caro. (Utilice solamente las cláusulas ORDER BY y LIMIT)
SELECT nombre, precio
FROM producto
ORDER BY precio DESC
LIMIT 1;

-- 20. Lista el nombre de todos los productos del fabricante cuyo código de fabricante es igual a 2.
SELECT nombre
FROM producto
WHERE codigo_fabricante = 2;

-- 21. Lista el nombre de los productos que tienen un precio menor o igual a 120€.
SELECT nombre
FROM producto
WHERE precio <= 120;

-- 22. Lista el nombre de los productos que tienen un precio mayor o igual a 400€.
SELECT nombre
FROM producto
WHERE precio >= 400;

-- 23. Lista el nombre de los productos que no tienen un precio mayor o igual a 400€.
SELECT nombre
FROM producto
WHERE ! (precio >= 400);

-- 24. Lista todos los productos que tengan un precio entre 80€ y 300€. Sin utilizar el operador BETWEEN.
SELECT *
FROM producto
WHERE precio >= 80 AND precio <= 300;

-- 25. Lista todos los productos que tengan un precio entre 60€ y 200€. Utilizando el operador BETWEEN.
SELECT *
FROM producto
WHERE precio BETWEEN 60 AND 200;

-- 26. Lista todos los productos que tengan un precio mayor que 200€ y que el código de fabricante sea igual a 6.
SELECT *
FROM producto
WHERE precio >= 200
	AND codigo_fabricante = 6;

  -- 27. Lista todos los productos donde el código de fabricante sea 1, 3 o 5. Sin utilizar el operador IN.
SELECT *
FROM producto
WHERE codigo_fabricante = 1 OR codigo_fabricante = 3 OR codigo_fabricante = 5;

-- 28. Lista todos los productos donde el código de fabricante sea 1, 3 o 5. Utilizando el operador IN.
SELECT *
FROM producto
WHERE codigo_fabricante IN (1,3,5);

-- 29. Lista el nombre y el precio de los productos en céntimos (Habrá que multiplicar por 100 el valor del precio). Cree un alias para la columna que contiene el precio que se llame céntimos.
SELECT nombre, precio*100 AS 'céntimos'
FROM producto;

-- 30. Lista los nombres de los fabricantes cuyo nombre empiece por la letra S.
SELECT nombre
FROM fabricante
WHERE nombre LIKE 's%';

-- 31. Lista los nombres de los fabricantes cuyo nombre termine por la vocal e.
SELECT nombre
FROM fabricante
WHERE nombre LIKE '%e';

-- 32. Lista los nombres de los fabricantes cuyo nombre contenga el carácter w.
SELECT nombre
FROM fabricante
WHERE nombre LIKE '%w%'

-- 33. Lista los nombres de los fabricantes cuyo nombre sea de 4 caracteres.
SELECT nombre
FROM fabricante
WHERE nombre LIKE '____';

-- 34. Devuelve una lista con el nombre de todos los productos que contienen la cadena Portátil en el nombre.
SELECT nombre
FROM producto
WHERE nombre LIKE '%Portátil%';

-- 35. Devuelve una lista con el nombre de todos los productos que contienen la cadena Monitor en el nombre y tienen un precio inferior a 215 €.
SELECT nombre
FROM producto
WHERE nombre LIKE '%Monitor%'
AND precio < 215;

-- 36. Lista el nombre y el precio de todos los productos que tengan un precio mayor o igual a 180€. Ordene el resultado en primer lugar por el precio (en orden descendente) y en segundo lugar por el nombre (en orden ascendente).
SELECT nombre, precio
FROM producto
WHERE precio >= 180
ORDER BY precio DESC, nombre ASC;

----------------------------------------------------------------
------- 1.1.4 Consultas multitabla (Composición interna) -------
----------------------------------------------------------------

-- 1. Devuelve una lista con el nombre del producto, precio y nombre de fabricante de todos los productos de la base de datos.
SELECT p.nombre, p.precio, f.nombre
FROM producto AS p
JOIN fabricante AS f
ON p.codigo_fabricante = f.codigo;

-- 2. Devuelve una lista con el nombre del producto, precio y nombre de fabricante de todos los productos de la base de datos. Ordene el resultado por el nombre del fabricante, por orden alfabético.
SELECT p.nombre, p.precio, f.nombre
FROM producto AS p
JOIN fabricante AS f
ON p.codigo_fabricante = f.codigo
ORDER BY f.nombre ASC;

-- 3. Devuelve una lista con el código del producto, nombre del producto, código del fabricante y nombre del fabricante, de todos los productos de la base de datos.
SELECT p.nombre, p.precio, f.codigo, f.nombre
FROM producto AS p
JOIN fabricante AS f
ON p.codigo_fabricante = f.codigo;

-- 4. Devuelve el nombre del producto, su precio y el nombre de su fabricante, del producto más barato.
SELECT p.nombre, p.precio, f.nombre
FROM producto AS p
JOIN fabricante AS f
ON p.codigo_fabricante = f.codigo
ORDER BY precio ASC
LIMIT 1;

-- 5. Devuelve el nombre del producto, su precio y el nombre de su fabricante, del producto más caro.
SELECT p.nombre, p.precio, f.nombre
FROM producto AS p
JOIN fabricante AS f
ON p.codigo_fabricante = f.codigo
ORDER BY precio DESC
LIMIT 1;

-- 6. Devuelve una lista de todos los productos del fabricante Lenovo.
SELECT *
FROM producto AS p
JOIN fabricante AS f
ON p.codigo_fabricante = f.codigo
WHERE f.nombre = 'Lenovo';

-- 7. Devuelve una lista de todos los productos del fabricante Crucial que tengan un precio mayor que 200€.
SELECT *
FROM producto AS p
JOIN fabricante AS f
ON p.codigo_fabricante = f.codigo
WHERE f.nombre = 'Crucial'
AND precio > 200;

-- 8. Devuelve un listado con todos los productos de los fabricantes Asus, Hewlett-Packardy Seagate. Sin utilizar el operador IN.
SELECT *
FROM producto AS p
JOIN fabricante AS f
ON p.codigo_fabricante = f.codigo
WHERE f.nombre = 'Asus'
OR f.nombre = 'Hewlett-Packard'
OR f.nombre = 'Seagate';

-- 9. Devuelve un listado con todos los productos de los fabricantes Asus, Hewlett-Packardy Seagate. Utilizando el operador IN.
SELECT *
FROM producto AS p
JOIN fabricante AS f
ON p.codigo_fabricante = f.codigo
WHERE f.nombre IN ('Asus','Hewlett-Packard','Seagate');

-- 10. Devuelve un listado con el nombre y el precio de todos los productos de los fabricantes cuyo nombre termine por la vocal e.
SELECT p.nombre, p.precio
FROM producto AS p
JOIN fabricante AS f
ON p.codigo_fabricante = f.codigo
WHERE f.nombre LIKE '%e';

-- 11. Devuelve un listado con el nombre y el precio de todos los productos cuyo nombre de fabricante contenga el carácter w en su nombre.
SELECT p.nombre, p.precio
FROM producto AS p
JOIN fabricante AS f
ON p.codigo_fabricante = f.codigo
WHERE f.nombre LIKE '%w%';

-- 12. Devuelve un listado con el nombre de producto, precio y nombre de fabricante, de todos los productos que tengan un precio mayor o igual a 180€. Ordene el resultado en primer lugar por el precio (en orden descendente) y en segundo lugar por el nombre (en orden ascendente)
SELECT p.nombre, p.precio, f.nombre
FROM producto AS p
JOIN fabricante AS f
ON p.codigo_fabricante = f.codigo
WHERE p.precio >= 180
ORDER BY p.precio DESC, p.nombre ASC;

-- 13. Devuelve un listado con el código y el nombre de fabricante, solamente de aquellos fabricantes que tienen productos asociados en la base de datos.
SELECT DISTINCT(f.codigo), f.nombre
FROM producto AS p
JOIN fabricante AS f
ON p.codigo_fabricante = f.codigo;

----------------------------------------------------------------
------- 1.1.5 Consultas multitabla (Composición externa) -------
----------------------------------------------------------------

-- 01. Devuelve un listado de todos los fabricantes que existen en la base de datos, junto con los productos que tiene cada uno de ellos. El listado deberá mostrar también aquellos fabricantes que no tienen productos asociados.
SELECT *
FROM fabricante
LEFT JOIN producto
ON fabricante.codigo = producto.codigo_fabricante;

-- 02. Devuelve un listado donde sólo aparezcan aquellos fabricantes que no tienen ningún producto asociado.
SELECT *
FROM fabricante
LEFT JOIN producto
ON fabricante.codigo = producto.codigo_fabricante
WHERE producto.nombre IS NULL;

-- 03. ¿Pueden existir productos que no estén relacionados con un fabricante? Justifique su respuesta.
/* NO, NO ÉS POSSIBLE. QUAN HEM CREAT LA BASE DE DADES HEM DEFINIT, DINS DE LA
TAULA DE PRODUCTES, QUE EL VALOR PER codigo_fabricante NO PODIA SER NULL
>> FILE: 112_Base de datos para MySQL.sql
>> LINE 16 || codigo_fabricante INT UNSIGNED NOT NULL
 EN TOT CAS ES PODRIA HAVER ASSIGNAT El codigo_fabricante A UN VALOR QUE NO ESTIGUI
 ASSIGNAT A UN FABRICANT, PERÒ AIXÒ DONARIA UN ERROR EN CREAR LA BBDD */


---------------------------------------
------- 1.1.6 Consultas resumen -------
---------------------------------------

-- 01. Calcula el número total de productos que hay en la tabla productos.
SELECT count(*)
FROM producto;

-- 02. Calcula el número total de fabricantes que hay en la tabla fabricante.
SELECT count(*)
FROM fabricante;

-- 03. Calcula el número de valores distintos de código de fabricante aparecen en la tabla productos.
SELECT count(DISTINCT(codigo_fabricante))
FROM producto;

-- 04. Calcula la media del precio de todos los productos.
SELECT AVG(precio)
FROM producto;

-- 05. Calcula el precio más barato de todos los productos.
SELECT MIN(precio)
FROM producto;

-- 06. Calcula el precio más caro de todos los productos.
SELECT MAX(precio)
FROM producto;

-- 07. Lista el nombre y el precio del producto más barato.
SELECT nombre, precio
FROM producto
WHERE  precio = (
   SELECT MIN(precio)
   FROM producto );

-- 08. Lista el nombre y el precio del producto más caro.
SELECT nombre, precio
FROM producto
WHERE  precio = (
   SELECT MAX(precio)
   FROM producto );

 -- 09. Calcula la suma de los precios de todos los productos.
SELECT SUM(precio)
FROM producto;

-- 10. Calcula el número de productos que tiene el fabricante Asus.
SELECT count(*)
FROM producto
JOIN fabricante
ON producto.codigo_fabricante = fabricante.codigo
WHERE fabricante.nombre = 'Asus';

-- 11. Calcula la media del precio de todos los productos del fabricante Asus.
SELECT AVG(precio)
FROM producto
JOIN fabricante
ON producto.codigo_fabricante = fabricante.codigo
WHERE fabricante.nombre = 'Asus';

-- 12. Calcula el precio más barato de todos los productos del fabricante Asus.
SELECT MIN(precio)
FROM producto
JOIN fabricante
ON producto.codigo_fabricante = fabricante.codigo
WHERE fabricante.nombre = 'Asus';

-- 13. Calcula el precio más caro de todos los productos del fabricante Asus.
SELECT MAX(precio)
FROM producto
JOIN fabricante
ON producto.codigo_fabricante = fabricante.codigo
WHERE fabricante.nombre = 'Asus';

-- 14. Calcula la suma de todos los productos del fabricante Asus.
SELECT SUM(precio)
FROM producto
JOIN fabricante
ON producto.codigo_fabricante = fabricante.codigo
WHERE fabricante.nombre = 'Asus';

-- 15. Muestra el precio máximo, precio mínimo, precio medio y el número total de productos que tiene el fabricante Crucial.
SELECT MAX(precio), MIN(precio), AVG(precio), COUNT(precio)
FROM producto
JOIN fabricante
ON producto.codigo_fabricante = fabricante.codigo
WHERE fabricante.nombre = 'Crucial';

-- 16. Muestra el número total de productos que tiene cada uno de los fabricantes. El listado también debe incluir los fabricantes que no tienen ningún producto. El resultado mostrará dos columnas, una con el nombre del fabricante y otra con el número de productos que tiene. Ordene el resultado descendentemente por el número de productos.
SELECT f.nombre, count(p.nombre) as Num_productos
FROM fabricante as f
LEFT JOIN producto as p
ON p.codigo_fabricante = f.codigo
GROUP BY f.nombre
ORDER BY Num_productos DESC;

-- 17. Muestra el precio máximo, precio mínimo y precio medio de los productos de cada uno de los fabricantes. El resultado mostrará el nombre del fabricante junto con los datos que se solicitan.
SELECT f.nombre, MAX(p.precio), MIN(p.precio), AVG(p.precio)
FROM fabricante as f
LEFT JOIN producto as p
ON p.codigo_fabricante = f.codigo
WHERE p.nombre IS NOT NULL
GROUP BY f.nombre;

-- 18. Muestra el precio máximo, precio mínimo, precio medio y el número total de productos de los fabricantes que tienen un precio medio superior a 200€. No es necesario mostrar el nombre del fabricante, con el código del fabricante es suficiente.
SELECT p.codigo_fabricante, MAX(p.precio), MIN(p.precio), AVG(p.precio), SUM(p.nombre)
FROM producto as p
GROUP BY p.codigo_fabricante
HAVING AVG(p.precio) > 200;

-- 19. Muestra el nombre de cada fabricante, junto con el precio máximo, precio mínimo, precio medio y el número total de productos de los fabricantes que tienen un precio medio superior a 200€. Es necesario mostrar el nombre del fabricante.
SELECT f.nombre, MAX(p.precio), MIN(p.precio), AVG(p.precio), SUM(p.nombre)
FROM fabricante as f
LEFT JOIN producto as p
ON p.codigo_fabricante = f.codigo
WHERE p.nombre IS NOT NULL
GROUP BY f.nombre
HAVING AVG(p.precio) > 200;

-- 20. Calcula el número de productos que tienen un precio mayor o igual a 180€.
SELECT COUNT(p.precio)
FROM producto as p
WHERE p.precio >= 180;

-- 21. Calcula el número de productos que tiene cada fabricante con un precio mayor o igual a 180€.
SELECT fabricante.nombre, count(precio)
FROM producto
JOIN fabricante
ON producto.codigo_fabricante = fabricante.codigo
WHERE precio >= 180
GROUP BY codigo_fabricante;

-- 22. Lista el precio medio los productos de cada fabricante, mostrando solamente el código del fabricante.
SELECT producto.codigo_fabricante, AVG(precio)
FROM producto
GROUP BY codigo_fabricante;

-- 23. Lista el precio medio los productos de cada fabricante, mostrando solamente el nombre del fabricante.
SELECT f.nombre, AVG(precio)
FROM fabricante as f
LEFT JOIN producto as p
ON p.codigo_fabricante = f.codigo
WHERE p.precio IS NOT NULL
GROUP BY codigo_fabricante;

-- 24. Lista los nombres de los fabricantes cuyos productos tienen un precio medio mayor o igual a 150€.
SELECT f.nombre, AVG(precio)
FROM fabricante as f
LEFT JOIN producto as p
ON p.codigo_fabricante = f.codigo
WHERE p.precio >= 150
GROUP BY codigo_fabricante;

-- 25. Devuelve un listado con los nombres de los fabricantes que tienen 2 o más productos.
SELECT f.nombre
FROM fabricante as f
LEFT JOIN producto as p
ON p.codigo_fabricante = f.codigo
GROUP BY f.nombre
HAVING COUNT(f.nombre) >= 2;

-- 26. Devuelve un listado con los nombres de los fabricantes y el número de productos que tiene cada uno con un precio superior o igual a 220 €. No es necesario mostrar el nombre de los fabricantes que no tienen productos que cumplan la condición.
SELECT f.nombre, COUNT(p.nombre)
FROM fabricante as f
LEFT JOIN producto as p
ON p.codigo_fabricante = f.codigo
WHERE p.precio >= 220
GROUP BY f.nombre DESC;

-- 27. Devuelve un listado con los nombres de los fabricantes y el número de productos que tiene cada uno con un precio superior o igual a 220 €. El listado debe mostrar el nombre de todos los fabricantes, es decir, si hay algún fabricante que no tiene productos con un precio superior o igual a 220€ deberá aparecer en el listado con un valor igual a 0 en el número de productos.
SELECT f.nombre, COUNT(p.nombre)
FROM fabricante as f
LEFT JOIN (SELECT *
         FROM producto
         WHERE precio >= 220) as p
ON p.codigo_fabricante = f.codigo
GROUP BY f.nombre
ORDER BY count(p.nombre) DESC;

-- 28. Devuelve un listado con los nombres de los fabricantes donde la suma del precio de todos sus productos es superior a 1000 €.
SELECT f.nombre
FROM fabricante as f
JOIN producto as p
ON p.codigo_fabricante = f.codigo
GROUP BY f.nombre
HAVING SUM(p.precio) > 1000;

-- 29. Devuelve un listado con el nombre del producto más caro que tiene cada fabricante. El resultado debe tener tres columnas: nombre del producto, precio y nombre del fabricante. El resultado tiene que estar ordenado alfabéticamente de menor a mayor por el nombre del fabricante.
SELECT p.nombre, MAX(precio), f.nombre
FROM fabricante as f
JOIN producto as p
ON p.codigo_fabricante = f.codigo
GROUP BY f.nombre
ORDER BY f.nombre ASC;


---------------------------------------------------------
------- 1.1.7 Subconsultas (En la cláusula WHERE) -------
---------------------------------------------------------

------- 1.1.7.1 Con operadores básicos de comparación -------

-- 01. Devuelve todos los productos del fabricante Lenovo. (Sin utilizar INNER JOIN).
SELECT *
FROM producto as p, fabricante as f
WHERE p.codigo_fabricante = f.codigo
AND f.nombre = 'Lenovo';

-- 02. Devuelve todos los datos de los productos que tienen el mismo precio que el producto más caro del fabricante Lenovo. (Sin utilizar INNER JOIN).
SELECT *
FROM producto as p
WHERE p.precio = (
 SELECT MAX(precio)
 FROM producto as p, fabricante as f
 WHERE p.codigo_fabricante = f.codigo
 AND f.nombre = 'Lenovo' );

-- 03. Lista el nombre del producto más caro del fabricante Lenovo.
SELECT p.nombre
FROM producto as p
WHERE p.precio = (
 SELECT MAX(precio)
 FROM producto as p, fabricante as f
 WHERE p.codigo_fabricante = f.codigo
 AND f.nombre = 'Lenovo' );

-- 04. Lista el nombre del producto más barato del fabricante Hewlett-Packard.
SELECT p.nombre
FROM producto as p
WHERE p.precio = (
 SELECT MIN(precio)
 FROM producto as p, fabricante as f
 WHERE p.codigo_fabricante = f.codigo
 AND f.nombre = 'Hewlett-Packard' );

-- 05. Devuelve todos los productos de la base de datos que tienen un precio mayor o igual al producto más caro del fabricante Lenovo.
SELECT *
FROM producto as p
WHERE p.precio >= (
 SELECT MAX(precio)
 FROM producto as p, fabricante as f
 WHERE p.codigo_fabricante = f.codigo
 AND f.nombre = 'Lenovo' );

-- 06. Lista todos los productos del fabricante Asus que tienen un precio superior al precio medio de todos sus productos.
SELECT *
FROM producto as p
JOIN fabricante as f
ON p.codigo_fabricante = f.codigo
WHERE f.nombre = 'ASUS'
AND p.precio > (
 SELECT AVG(precio)
 FROM producto as p, fabricante as f
 WHERE p.codigo_fabricante = f.codigo
 AND f.nombre = 'ASUS' );

------- 1.1.7.2 Subconsultas con ALL y ANY -------

-- 08. Devuelve el producto más caro que existe en la tabla producto sin hacer uso de MAX, ORDER BY ni LIMIT.
SELECT *
FROM producto AS p1
WHERE p1.precio = ALL (
 SELECT precio
 FROM producto AS p2
 WHERE p1.precio < p2.precio );

-- 09. Devuelve el producto más barato que existe en la tabla producto sin hacer uso de MIN, ORDER BY ni LIMIT.
SELECT *
FROM producto AS p1
WHERE p1.precio = ALL (
 SELECT precio
 FROM producto AS p2
 WHERE p1.precio > p2.precio );

-- 10. Devuelve los nombres de los fabricantes que tienen productos asociados. (Utilizando ALL o ANY).
SELECT f.nombre
FROM fabricante AS f
WHERE f.codigo = ANY (
 SELECT p.codigo_fabricante
 FROM producto AS p);

-- 11. Devuelve los nombres de los fabricantes que no tienen productos asociados. (Utilizando ALL o ANY).
SELECT f.nombre
FROM fabricante AS f
WHERE f.codigo <> ALL (
 SELECT p.codigo_fabricante
 FROM producto AS p);

------- 1.1.7.3 Subconsultas con IN y NOT IN -------

-- 12. Devuelve los nombres de los fabricantes que tienen productos asociados. (Utilizando IN o NOT IN).
SELECT f.nombre
FROM fabricante AS f
WHERE f.codigo IN (
 SELECT p.codigo_fabricante
 FROM producto AS p);

-- 13. Devuelve los nombres de los fabricantes que no tienen productos asociados. (Utilizando IN o NOT IN).
SELECT f.nombre
FROM fabricante AS f
WHERE f.codigo NOT IN (
 SELECT p.codigo_fabricante
 FROM producto AS p);

------- 1.1.7.4 Subconsultas con EXISTS y NOT EXISTS -------

-- 14. Devuelve los nombres de los fabricantes que tienen productos asociados. (Utilizando EXISTS o NOT EXISTS).
SELECT f1.nombre
FROM fabricante AS f1
WHERE EXISTS (
 SELECT f2.nombre
 FROM producto AS p, fabricante as f2
 WHERE p.codigo_fabricante = f2.codigo
 AND f1.nombre = f2.nombre );

-- 15. Devuelve los nombres de los fabricantes que no tienen productos asociados. (Utilizando EXISTS o NOT EXISTS).
SELECT f1.nombre
FROM fabricante AS f1
WHERE NOT EXISTS (
 SELECT f2.nombre
 FROM producto AS p, fabricante as f2
 WHERE p.codigo_fabricante = f2.codigo
 AND f1.nombre = f2.nombre );

------- 1.1.7.5 Subconsultas correlacionadas -------

-- 16. Lista el nombre de cada fabricante con el nombre y el precio de su producto más caro.
SELECT f.nombre, p1.nombre, p1.precio
FROM fabricante AS f
JOIN producto AS p1
ON f.codigo = p1.codigo_fabricante
WHERE p1.precio = (
 SELECT MIN(p2.precio)
 FROM producto AS p2
 WHERE p2.codigo_fabricante = p1.codigo_fabricante);

-- 17. Devuelve un listado de todos los productos que tienen un precio mayor o igual a la media de todos los productos de su mismo fabricante.
SELECT *
FROM producto AS p1
WHERE p1.precio >= (
 SELECT AVG(p2.precio)
 FROM producto AS p2
 WHERE p2.codigo_fabricante = p1.codigo_fabricante);

-- 18. Lista el nombre del producto más caro del fabricante Lenovo.
SELECT p1.nombre
FROM producto AS p1
JOIN fabricante AS f1
ON p1.codigo_fabricante = f1.codigo
WHERE f1.nombre = 'LENOVO'
AND p1.precio = (
 SELECT MAX(p2.precio)
 FROM producto AS p2
 WHERE p2.codigo_fabricante = p1.codigo_fabricante);


----------------------------------------------------------
------- 1.1.8 Subconsultas (En la cláusula HAVING) -------
----------------------------------------------------------

-- 07. Devuelve un listado con todos los nombres de los fabricantes que tienen el mismo número de productos que el fabricante Lenovo.
SELECT f1.nombre
FROM fabricante AS f1
LEFT JOIN producto AS p1
ON f1.codigo = p1.codigo_fabricante
GROUP BY f1.nombre
HAVING COUNT(p1.nombre) = (
   SELECT count(p2.nombre)
   FROM fabricante AS f2
   LEFT JOIN producto AS p2
   ON f2.codigo = p2.codigo_fabricante
   WHERE f2.nombre = 'Lenovo')
